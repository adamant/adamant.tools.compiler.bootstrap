using Adamant.Tools.Compiler.Bootstrap.Core;
using Adamant.Tools.Compiler.Bootstrap.Metadata.Types;
using JetBrains.Annotations;

namespace Adamant.Tools.Compiler.Bootstrap.AST
{
    /// <summary>
    /// The implicit conversions do not have "Syntax" in their name, because
    /// there is no corresponding syntax. They are never generated by the parser,
    /// but are inserted during type checking.
    /// </summary>
    public abstract class ImplicitConversionExpression : ExpressionSyntax
    {
        protected ImplicitConversionExpression(TextSpan span, [NotNull] DataType convertToType)
            : base(span)
        {
            Type.BeginFulfilling();
            Type.Fulfill(convertToType);
        }
    }
}
