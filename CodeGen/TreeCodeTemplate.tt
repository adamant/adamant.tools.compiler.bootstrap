<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#  foreach(var usingNamespace in OrderedNamespaces()) { #>
using <#=usingNamespace #>;
<#  } #>

namespace <#=grammar.Namespace #>
{
<#  foreach(var rule in grammar.Rules) {#>
<#=ClosedType(rule) #>    public partial interface <#= TypeName(rule.Nonterminal) #><#= BaseTypes(rule) #>
    {
<#      foreach(var property in rule.Properties.Where(p => NeedsDeclared(rule, p))) { #>
        <#=IsNewDefinition(rule, property) ? "new " : "" #><#=TypeName(property.Type) #> <#=property.Name #> { get; }
<#      } #>
    }

<#  } #>
}
