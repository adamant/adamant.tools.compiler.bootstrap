using Adamant.Tools.Compiler.Bootstrap.AST;
using Adamant.Tools.Compiler.Bootstrap.Core;
using Adamant.Tools.Compiler.Bootstrap.Metadata.Types;

namespace Adamant.Tools.Compiler.Bootstrap.Semantics.Basic.ImplicitConversions
{
    /// <summary>
    /// The implicit conversions do not have "Syntax" in their name, because
    /// there is no corresponding syntax. They are never generated by the parser,
    /// but are inserted during type checking.
    /// </summary>
    internal abstract class ImplicitConversionExpression : ExpressionSyntax, IImplicitConversionExpression
    {
        public IExpressionSyntax Expression { get; }
        protected ImplicitConversionExpression(TextSpan span, DataType convertToType, IExpressionSyntax expression)
            : base(span)
        {
            Expression = expression;
            Type = convertToType;
        }
    }
}
