<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:String x:Key="/Default/CodeInspection/Highlighting/ValueAnalysisMode/@EntryValue">PESSIMISTIC</s:String>
	<s:String x:Key="/Default/FilterSettingsManager/CoverageFilterXml/@EntryValue">&lt;data&gt;&lt;IncludeFilters /&gt;&lt;ExcludeFilters&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Sdk.*" FunctionMask="*" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="False" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="Single" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="IsAssignableFrom" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="Equals" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="ReferenceEquals" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="Throws" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="PropertyChanged" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="RecordException" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask=".ctor" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="True" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="Contains" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="DoesNotContain" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="Equal" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="NotEqual" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="GetComparer" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="StrictEqual" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="NotStrictEqual" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="ThrowsAsync" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="ThrowsAny" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="ThrowsAnyAsync" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="InRange" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="NotInRange" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="StartsWith" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="EndsWith" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="IsLineEnding" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="IsWhiteSpace" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="IsNotType" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="NotSame" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="Same" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="IsType" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="ProperSubset" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="ProperSuperset" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="Subset" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="Superset" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="Matches" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="DoesNotMatch" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.RaisedEvent`1" FunctionMask="*" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="RaisesAny" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="RaisesAnyAsync" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="Raises" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="RaisesAsync" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="RecordExceptionAsync" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="SkipWhitespace" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="RaisesInternal" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="RaisesAsyncInternal" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="SkipLineEnding" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="PropertyChangedAsync" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="All" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="GuardArgumentNotNull" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="NotNull" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="Null" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="Collection" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="Empty" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="NotEmpty" IsEnabled="True" /&gt;&lt;Filter ModuleMask="Adamant.Tools.Compiler.Bootstrap.Tests.Asserts" ModuleVersionMask="*" ClassMask="Xunit.Assert" FunctionMask="GetEqualityComparer" IsEnabled="True" /&gt;&lt;/ExcludeFilters&gt;&lt;/data&gt;</s:String></wpf:ResourceDictionary>